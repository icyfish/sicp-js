import{_ as c,r as e,o as r,c as i,a as s,b as a,w as l,F as u,d as n,e as o}from"./app.07e6cbcb.js";var d="/sicp-js/assets/ch1.1.6_condition1.91a0cbf1.png",m="/sicp-js/assets/ch1.1.6_condition2.74eb7251.png",b="/sicp-js/assets/ch1.1.6_nested_condition.88de3e71.png";const _={},k=s("h1",{id:"_1-1-6-\u6761\u4EF6\u8868\u8FBE\u5F0F\u548C\u65AD\u8A00",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_1-1-6-\u6761\u4EF6\u8868\u8FBE\u5F0F\u548C\u65AD\u8A00","aria-hidden":"true"},"#"),n(" 1.1.6 \u6761\u4EF6\u8868\u8FBE\u5F0F\u548C\u65AD\u8A00")],-1),g={href:"https://sourceacademy.org/sicpjs/1.1.6",target:"_blank",rel:"noopener noreferrer"},x=n("Original"),h=o('<p>\u622A\u6B62\u76EE\u524D, \u6211\u4EEC\u80FD\u591F\u5B9E\u73B0\u7684\u51FD\u6570\u7684\u8868\u8FBE\u80FD\u529B\u8FD8\u662F\u6709\u6240\u6B20\u7F3A, \u56E0\u4E3A\u6211\u4EEC\u6CA1\u6709\u529E\u6CD5\u6839\u636E\u6D4B\u8BD5\u7684\u7ED3\u679C\u5BF9\u6D4B\u8BD5\u7684\u793A\u4F8B\u8FDB\u884C\u4E0D\u540C\u7684\u64CD\u4F5C. For instance, we cannot declare a function that computes the absolute value of a number by testing whether the number is nonnegative and taking different actions in each case according to the rule</p><p><img src="'+d+`" alt="condition_1"></p><p>\u4EE5\u4E0A\u7ED3\u6784\u662F\u4E2A <em>\u793A\u4F8B\u5206\u6790</em>, \u7528 JavaScript <em>\u6761\u4EF6\u8868\u8FBE\u5F0F</em> \u8868\u8FBE\u5C31\u662F\u8FD9\u6837:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">abs</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> x <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">?</span> x <span class="token operator">:</span> <span class="token operator">-</span> x<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u7528\u81EA\u7136\u8BED\u8A00\u6765\u63CF\u8FF0\u5C31\u662F\u8FD9\u6837\u7684: \u5982\u679C x \u5927\u4E8E\u6216\u7B49\u4E8E 0, \u5C31\u8FD4\u56DE <code>x</code> \u672C\u8EAB, \u5426\u5219\u8FD4\u56DE <code>-x</code>. \u901A\u7528\u7684\u5F62\u5F0F\u662F\u8FD9\u6837\u7684:</p><p>predicate ? consequent-expression : alternative-expression</p><p>\u6761\u4EF6\u8868\u8FBE\u5F0F\u4EE5\u65AD\u8A00(<em>predicate</em>)\u4F5C\u4E3A\u8D77\u59CB, \u4E5F\u5C31\u662F, \u8868\u8FBE\u5F0F\u7684\u7ED3\u679C\u8981\u4E48\u662F <code>true</code> \u8981\u4E48\u662F <code>false</code>, \u4E5F\u5C31\u662F JavaScript \u4E2D\u7684\u4E24\u4E2A\u5E03\u5C14\u503C. \u539F\u59CB\u5E03\u5C14\u8868\u8FBE\u5F0F <code>true</code> \u6216\u8005 <code>false</code> trivially evaluate to the boolean values true and false, respectively. \u65AD\u8A00 (<em>predicate</em>) \u4E4B\u540E\u662F\u4E00\u4E2A\u95EE\u53F7, \u7136\u540E\u662F\u4F5C\u4E3A\u7ED3\u679C\u7684\u8868\u8FBE\u5F0F(<em>consequent-expression</em>), \u6700\u540E\u662F\u53E6\u4E00\u4E2A\u4F5C\u4E3A\u7ED3\u679C\u7684\u8868\u8FBE\u5F0F(<em>alternative-expression</em>).</p><p>\u8981\u8BA1\u7B97\u6761\u4EF6\u8868\u8FBE\u5F0F, \u89E3\u91CA\u5668\u4F1A\u9996\u5148\u8BA1\u7B97\u51FA\u65AD\u8A00\u7684\u7ED3\u679C. \u5982\u679C\u65AD\u8A00\u7ED3\u679C\u4E3A <code>true</code>, \u90A3\u4E48\u89E3\u91CA\u5668\u5C31\u4F1A\u8FD4\u56DE <em>consequent-expression</em>, \u5426\u5219\u5C31\u662F <em>alternative-expression</em>.</p><p><strong>\u65AD\u8A00</strong>(<em>predicate</em>)\u88AB\u7528\u4E8E\u8FD4\u56DE\u5E03\u5C14\u503C\u7684\u64CD\u4F5C\u7B26\u548C\u8868\u8FBE\u5F0F\u4E2D, \u5E03\u5C14\u503C\u4E5F\u53EF\u4EE5\u88AB\u8FD4\u56DE\u5E03\u5C14\u503C\u7684\u8868\u8FBE\u5F0F\u6240\u66FF\u4EE3. \u4EE5\u4E0A\u793A\u4F8B\u7684\u8BA1\u7B97\u7EDD\u5BF9\u503C\u51FD\u6570 <code>abs</code> \u4E2D, \u4F7F\u7528\u4E86 <code>&gt;=</code> \u64CD\u4F5C\u7B26, \u8BE5\u64CD\u4F5C\u7B26\u63A5\u53D7\u4E24\u4E2A\u6570\u5B57\u4F5C\u4E3A\u53C2\u6570, \u7136\u540E\u6D4B\u8BD5\u7B2C\u4E00\u4E2A\u6570\u5B57\u662F\u5426\u5927\u4E8E\u6216\u8005\u7B49\u4E8E\u7B2C\u4E8C\u4E2A\u6570\u5B57, \u6839\u636E\u5BF9\u5E94\u7684\u8BA1\u7B97\u7ED3\u679C\u8FD4\u56DE\u5BF9\u5E94\u503C.</p><p>\u5982\u679C\u60F3\u8981\u5355\u72EC\u5206\u5F00\u5904\u7406\u503C\u4E3A0\u7684\u60C5\u51B5, \u6211\u4EEC\u53EF\u4EE5\u8FD9\u6837\u5B9E\u73B0\u5BF9\u5E94\u7684\u51FD\u6570:</p><p><img src="`+m+`" alt="condition_2"></p><p>\u5728 JavaScript \u4E2D, \u53EF\u4EE5\u4F7F\u7528\u5D4C\u5957\u6761\u4EF6\u8868\u8FBE\u5F0F\u7684\u65B9\u5F0F\u6765\u8868\u8FBE:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">abs</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> x <span class="token operator">&gt;</span> <span class="token number">0</span>
           <span class="token operator">?</span> x
           <span class="token operator">:</span> x <span class="token operator">===</span> <span class="token number">0</span>
           <span class="token operator">?</span> <span class="token number">0</span>
           <span class="token operator">:</span> <span class="token operator">-</span> x<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u5728\u66FF\u4EE3\u8868\u8FBE\u5F0F (<em>alternative expression</em>) <code>x === 0 ? 0 : - x</code> \u4E2D, \u62EC\u53F7\u5E76\u4E0D\u662F\u5FC5\u987B\u7684, \u56E0\u4E3A\u6761\u4EF6\u8868\u8FBE\u5F0F\u7684\u8BED\u6CD5\u7ED3\u6784\u662F\u53F3\u8054\u5408\u7684, \u5373\u4F1A\u5148\u8BA1\u7B97\u53F3\u4FA7\u7684\u8868\u8FBE\u5F0F. \u89E3\u91CA\u5668\u4F1A\u5FFD\u7565\u7A7A\u683C\u548C\u6362\u884C, \u5728\u8FD9\u91CC\u52A0\u5165\u662F\u4E3A\u4E86\u5BF9\u9F50 <code>?</code> \u548C <code>:</code>, \u4EE5\u589E\u52A0\u53EF\u8BFB\u6027. \u4EE5\u4E0A\u793A\u4F8B\u7684\u901A\u7528\u5F62\u5F0F\u662F\u8FD9\u6837\u7684:</p><p><img src="`+b+'" alt="nested_condition"></p><p>\u6211\u4EEC\u628A\u65AD\u8A00 p<sub>i</sub> \u548C\u4E4B\u540E\u7684\u8868\u8FBE\u5F0F e<sub>i</sub> \u53EB\u505A\u4E00\u4E2A <em>\u5206\u53E5</em>. \u4EE5\u4E0A\u7684\u793A\u4F8B\u53EF\u4EE5\u770B\u4F5C\u662F\u4E00\u7CFB\u5217\u7684\u5206\u53E5, \u6700\u540E\u662F\u66FF\u4EE3\u8868\u8FBE\u5F0F. \u6839\u636E\u6761\u4EF6\u8868\u8FBE\u5F0F\u7684\u8BA1\u7B97, \u4EE5\u4E0A\u793A\u4F8B\u5206\u6790\u7684\u6700\u7EC8\u7ED3\u679C\u662F\u8FD9\u6837\u8BA1\u7B97\u51FA\u6765\u7684, \u9996\u5148\u8BA1\u7B97\u65AD\u8A00 p<sub>1</sub>, \u5982\u679C\u503C\u662F <code>false</code>, \u90A3\u4E48\u5C31\u8BA1\u7B97 p<sub>2</sub>, \u5982\u679C\u503C\u4F9D\u7136\u662F <code>false</code>, \u5219\u8BA1\u7B97 p<sub>3</sub>. \u8FD9\u4E2A\u8FC7\u7A0B\u9700\u8981\u4E00\u76F4\u6301\u7EED\u5230\u53D1\u73B0\u67D0\u4E2A\u65AD\u8A00\u7684\u503C\u4E3A <code>true</code>, \u6700\u7EC8\u7684\u503C\u5C31\u662F\u6700\u540E\u7684\u66FF\u4EE3\u8868\u8FBE\u5F0F\u7684\u503C.</p><p>\u9664\u4E86\u539F\u59CB\u65AD\u8A00 <code>&gt;=</code>, <code>&gt;</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>===</code>, \u4EE5\u53CA <code>!==</code> \u80FD\u591F\u4F5C\u7528\u4E8E\u6570\u5B57\u4E4B\u5916, \u8FD8\u6709\u4E00\u4E9B\u903B\u8F91\u7EC4\u5408\u64CD\u4F5C, \u6211\u4EEC\u80FD\u591F\u501F\u6B64\u5B9E\u73B0\u7EC4\u5408\u65AD\u8A00. \u5176\u4E2D3\u4E2A\u6700\u5E38\u7528\u7684\u662F:</p><ul><li><p>expression<sub>1</sub> &amp;&amp; expression<sub>2</sub></p><p>\u8BE5\u64CD\u4F5C\u8868\u8FBE<strong>\u903B\u8F91\u8054\u5408</strong>(<em>logical conjunction</em>), \u4E0E\u81EA\u7136\u8BED\u8A00\u4E2D\u7684 &quot;\u548C&quot; \u542B\u4E49\u7C7B\u4F3C. \u4EE5\u4E0A\u53E5\u6CD5\u5F62\u5F0F\u662F</p><p>expression<sub>1</sub> ? expression<sub>2</sub> : false \u7684\u8BED\u6CD5\u7CD6</p></li><li><p>expression<sub>1</sub> || expression<sub>2</sub></p><p>\u8BE5\u64CD\u4F5C\u8868\u8FBE<strong>\u903B\u8F91\u5206\u79BB</strong>(<em>logical disjunction</em>), \u4E0E\u81EA\u7136\u8BED\u8A00\u4E2D\u7684 &quot;\u6216&quot; \u542B\u4E49\u7C7B\u4F3C. \u4EE5\u4E0A\u53E5\u6CD5\u5F62\u5F0F\u662F</p><p>expression<sub>1</sub> ? true: expression<sub>2</sub> \u7684\u8BED\u6CD5\u7CD6</p></li><li><p>! expression</p><p>\u8BE5\u64CD\u4F5C\u8868\u8FBE<strong>\u903B\u8F91\u5426\u5B9A</strong>(<em>logical negation</em>), \u4E0E\u81EA\u7136\u8BED\u8A00\u4E2D\u7684 &quot;\u975E&quot; \u542B\u4E49\u7C7B\u4F3C. \u5F53 <code>expression</code> \u7684\u503C\u4E3A false \u65F6, <code>! expression</code> \u7684\u503C\u4E3A true.</p></li></ul>',18),v=n("\u6CE8\u610F "),f=s("code",null,"&&",-1),j=n(" \u548C "),y=s("code",null,"||",-1),q=n(" \u90FD\u662F\u53E5\u6CD5\u5F62\u5F0F, \u800C\u975E\u64CD\u4F5C\u7B26; \u5B83\u4EEC\u53F3\u4FA7\u7684\u8868\u8FBE\u5F0F\u5E76\u4E0D\u4E00\u5B9A\u59CB\u7EC8\u4F1A\u88AB\u8BA1\u7B97. \u4E0D\u8FC7\u64CD\u4F5C\u7B26 "),w=s("code",null,"!",-1),E=n(" \u4F9D\u7136\u9075\u5FAA "),L=n("1.1.3"),N=n(" \u4E2D\u6240\u63CF\u8FF0\u7684\u8BA1\u7B97\u89C4\u5219. \u8FD9\u662F\u4E00\u4E2A\u4E00\u5143\u8FD0\u7B97\u7B26, \u8BF4\u660E\u53EA\u63A5\u53D7\u4E00\u4E2A\u53C2\u6570. \u622A\u6B62\u76EE\u524D\u6211\u4EEC\u63D0\u5230\u7684\u7B97\u672F\u64CD\u4F5C\u7B26\u90FD\u662F\u4E8C\u5143\u64CD\u4F5C\u7B26, \u5305\u62EC\u4E0A\u9762\u7684\u539F\u59CB\u65AD\u8A00, \u90FD\u662F\u63A5\u53D7\u4E24\u4E2A\u53C2\u6570. \u64CD\u4F5C\u7B26 "),S=s("code",null,"!",-1),V=n(" \u4E4B\u540E\u8DDF\u7684\u662F\u76F8\u5173\u53C2\u6570, \u56E0\u6B64\u6211\u4EEC\u628A\u5B83\u53EB\u505A "),B=s("strong",null,"\u524D\u7F6E\u64CD\u4F5C\u7B26",-1),F=n(" ("),J=s("em",null,"prefix operator",-1),C=n("). \u53E6\u5916\u4E00\u4E2A\u524D\u7F6E\u64CD\u4F5C\u7B26\u662F\u8D1F\u53F7\u64CD\u4F5C\u7B26. \u5728 "),I=s("code",null,"abs",-1),R=n(" \u51FD\u6570\u4E2D\u6211\u4EEC\u63A5\u89E6\u8FC7\u8FD9\u4E2A\u8868\u8FBE\u5F0F: "),O=s("code",null,"-x",-1),P=n("."),T=o(`<p>\u5982\u679C\u9700\u8981\u4E00\u4E2A\u793A\u4F8B\u6765\u8BF4\u660E\u65AD\u8A00\u7684\u4F7F\u7528\u65B9\u5F0F, \u53EF\u4EE5\u4F7F\u7528 <code>5 &lt; x &lt; 10</code>, \u8FD9\u4E2A\u8868\u8FBE\u5F0F\u53EF\u4EE5\u7528\u8FD9\u79CD\u5F62\u5F0F\u6765\u8868\u8FBE:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>x <span class="token operator">&gt;</span> <span class="token number">5</span> <span class="token operator">&amp;&amp;</span> x <span class="token operator">&lt;</span> <span class="token number">10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u53E5\u6CD5\u5F62\u5F0F <code>&amp;&amp;</code> \u7684\u4F18\u5148\u7EA7\u4F4E\u4E8E\u6BD4\u8F83\u64CD\u4F5C\u7B26 <code>&lt;</code> \u548C <code>&gt;</code>, \u6761\u4EF6\u8868\u8FBE\u5F0F\u7684\u53E5\u6CD5\u5F62\u5F0F <code>...?...:...</code> \u4F18\u5148\u7EA7\u4F4E\u4E8E\u622A\u6B62\u76EE\u524D\u6211\u4EEC\u9047\u5230\u8FC7\u7684\u6240\u6709\u5176\u4ED6\u64CD\u4F5C\u7B26. \u6211\u4EEC\u5728\u51FD\u6570 <code>abs</code> \u4E2D\u7528\u5230\u8FC7\u8FD9\u4E2A\u53E5\u6CD5\u5F62\u5F0F.</p><p>\u63A5\u4E0B\u6765\u662F\u53E6\u4E00\u4E2A\u793A\u4F8B, \u6211\u4EEC\u5B9A\u4E49\u4E00\u4E2A\u65AD\u8A00\u6765\u6BD4\u8F83\u4E24\u4E2A\u6570\u5B57\u7684\u5927\u5C0F:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">greater_or_equal</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> x <span class="token operator">&gt;</span> y <span class="token operator">||</span> x <span class="token operator">===</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u4E5F\u53EF\u4EE5\u8FD9\u6837\u63CF\u8FF0:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">greater_or_equal</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">!</span> <span class="token punctuation">(</span>x <span class="token operator">&lt;</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u51FD\u6570 <code>greater_or_equal</code>, \u4F5C\u7528\u4E8E\u4E24\u4E2A\u6570\u5B57\u65F6, \u5176\u884C\u4E3A\u548C\u64CD\u4F5C\u7B26 <code>&gt;=</code> \u4E00\u81F4. \u4E00\u5143\u64CD\u4F5C\u7B26\u7684\u4F18\u5148\u7EA7\u9AD8\u4E8E\u4E8C\u5143\u64CD\u4F5C\u7B26, \u56E0\u6B64\u793A\u4F8B\u4E2D\u6211\u4EEC\u52A0\u4E0A\u4E86\u62EC\u53F7.</p>`,8);function z(A,D){const t=e("ExternalLinkIcon"),p=e("RouterLink");return r(),i(u,null,[k,s("p",null,[s("a",g,[x,a(t)])]),h,s("p",null,[v,f,j,y,q,w,E,a(p,{to:"/ch01/1.1.3.evaluating-operator-combinations.html"},{default:l(()=>[L]),_:1}),N,S,V,B,F,J,C,I,R,O,P]),T],64)}var H=c(_,[["render",z],["__file","1.1.6.conditional-expressions-predicates.html.vue"]]);export{H as default};
